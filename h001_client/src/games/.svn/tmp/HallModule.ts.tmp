/**
 * 大厅模块
 */
class HallModule {
	private context:Main;
	private panel;
	private panelNotice;
	private panelSub;
	private sCurModifyBtn:string = "";
	private sCurModifyValue:string = "";
	private sCurModifyValue2:string = "";
	private choicePanel;
	private lRank;
	private lMyRank;
	private sMyRankDesc;

	public constructor(ct:Main) {
		this.context = ct;
		this.init();
		// sData = CommonTools.getDataJsonStr("getTotalLvRank",1,{});
		// ConstValue.P_NET_OBJ.sendData(sData);
		// sData = CommonTools.getDataJsonStr("getFriendPvpRank",1,{});
		// ConstValue.P_NET_OBJ.sendData(sData);
		// sData = CommonTools.getDataJsonStr("getFriendLvRank",1,{});
		// ConstValue.P_NET_OBJ.sendData(sData);
	}

	private init(){
		CommonAudioHandle.play("LobbyMusic01_mp3",0);
		this.panel = new eui.Panel();
		this.panel.skinName = "resource/eui_skins/UserUI/HallUI.exml";
        this.panel.title = "Title";
        this.panel.horizontalCenter = 0;
        this.panel.verticalCenter = 0;
        this.context.addChild(this.panel);

		// CommonButtonHandle.beginTouch(this.panel.getChildByName("btn_match_pvp"),this);
		this.panel.getChildByName("btn_match_pvp").addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);

		if(ConstValue.cacheUserInfo != null && ConstValue.cacheUserInfo.gm == 1){//gm
			CommonButtonHandle.beginTouch(this.panel.getChildByName("btn_gm"),this);
			this.panel.getChildByName("btn_gm").addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
		}

		// let sData = CommonTools.getDataJsonStr("openRnakUI",1,{});
		// ConstValue.P_NET_OBJ.sendData(sData);
		// this.clickNotice("lb_notice_click0");

		this.btnClose = new eui.Button();
        this.btnClose.label = "btnClose!";
        this.btnClose.y = 35;
        this.btnClose.horizontalCenter = 0;
        this.context.addChild(this.btnClose);
        this.btnClose.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onButtonClick, this);

		//加载资源
        // const platform:any = window.platform;
        // platform.openDataContext.postMessage({
        //     command:'loadRes'
        // });

	}

	private clickNotice(name:string){
		let scroll = this.panelNotice.getChildByName("left_scroller");
		let group = scroll.getChildByName("left_group");
		let lb_title = this.panelNotice.getChildByName("lb_title") as eui.Label;
		let lb_mail_info = this.panelNotice.getChildByName("lb_mail_info") as eui.Label;

		let iChilds = group.numChildren;
		let idx = parseInt(name.replace("lb_notice_click",""));
		for(let i=0;i<iChilds;i++){
			let childObj = group.getChildByName("p_"+i);
			let groupT = childObj.getChildByName("group_1") as eui.Group;
			if(i==idx){
				groupT.getChildByName("img_yellow").visible = true;
				groupT.getChildByName("img_red").visible = false;
				let img_letter = groupT.getChildByName("img_letter") as eui.Image;
				img_letter.source = RES.getRes("mail_open2_png");
				lb_title.text = "标题：" + "喜报！！" + (i+1);
				lb_mail_info.text = "恭喜用户1000"+i+"喜获超级大奖xxxxxxxxxxxxxx";
			}else{
				groupT.getChildByName("img_yellow").visible = false;
			}
		}
	}

	private async onClick(e: egret.TouchEvent){
		if(this.context.loadingView!=null && !ConstValue.P_IS_DEBUG){
			CommonTools.log("还在加载中......return ");
			return;
		}

		let name = e.target.name;
		CommonTools.log("==========name::::"+name);
		if(name.indexOf("lb_notice_click")>=0){
			this.clickNotice(name);
			return;
		}

		switch(name){
			case "btn_close":
				this.closeNotice();
				break;

			case "btn_shop":
				CommonTools.addCommonTips(this.context,ConstValue.P_SEND_WAITING);
				break;
			
			case "btn_rank":
				let sData = CommonTools.getDataJsonStr("openRnakUI",1,{});
				ConstValue.P_NET_OBJ.sendData(sData);
				break;

			case "all_rank_lb":
			case "match_rank_lb":
				let sData_rank_1 = CommonTools.getDataJsonStr("getTotalPvpRank",1,{});
				ConstValue.P_NET_OBJ.sendData(sData_rank_1);
				break;

			case "lv_rank_lb":
				let sData_rank_2 = CommonTools.getDataJsonStr("getTotalLvRank",1,{});
				ConstValue.P_NET_OBJ.sendData(sData_rank_2);
				break;

			case "btn_noticetip":
				this.showNotice("resource/eui_skins/UserUI/NoticeUI.exml",name);
				break

			case "btn_match_pvp":
				await this.context.loadResource("fighting",3);
				break;

			case "btn_close_edit":
				this.closeSub();
				break;

			case "btn_gm":
				this.showEditUI(name);
				break;

			case "btn_confirm_modify":
				let account_lb_txt = this.panelSub.getChildByName("account_lb_txt") as eui.Label;
				if(account_lb_txt.text == ""){
					CommonTools.addCommonTips(this.context,ConstValue.P_MODIFY_NULL_FAIL);
					return;
				}
				if(ConstValue.P_IS_DEBUG){
					CommonTools.addCommonTips(this.context,ConstValue.P_SEND_MODIFY_SUCCESS);
					this.closeSub();
				}else{
					this.sCurModifyValue = account_lb_txt.text;
					let sData = "";
					if(this.sCurModifyBtn == "btn_gm"){
						sData = CommonTools.getDataJsonStr("gmFunc",1,{gmCmd:this.sCurModifyValue});
					}
					if(sData == ""){
						if(ConstValue.P_IS_INNER){
							CommonTools.addCommonTips(this.context,"btn_confirm_modify sData 为空");
						}
						return;
					}
					ConstValue.P_NET_OBJ.sendData(sData);
				}
				break;

			default:
				CommonTools.log("11111111 default");
				break;
		}
	}

	/**
     * 排行榜关闭按钮
     */
    private btnClose: eui.Button;

	private bitmap: egret.Bitmap;

    private isdisplay = false;

    /**
     * 排行榜遮罩，为了避免点击开放数据域影响到主域，在主域中建立一个遮罩层级来屏蔽点击事件.</br>
     * 根据自己的需求来设置遮罩的 alpha 值 0~1.</br>
     * 
     */
    private rankingListMask: egret.Shape;

    /**
     * 点击按钮
     * Click the button
     */
    private onButtonClick(e: egret.TouchEvent) {
        // let openDataContext = wx.getOpenDataContext();
        console.log('点击btnClose按钮');
        let platform: any = window.platform;
        if (this.isdisplay) {
            this.bitmap.parent && this.bitmap.parent.removeChild(this.bitmap);
            this.rankingListMask.parent && this.rankingListMask.parent.removeChild(this.rankingListMask);
            this.isdisplay = false;
            platform.openDataContext.postMessage({
                isDisplay: this.isdisplay,
                text: 'hello',
                year: (new Date()).getFullYear(),
                command: "close"
            });
        } else {
            //处理遮罩，避免开放数据域事件影响主域。
            this.rankingListMask = new egret.Shape();
            this.rankingListMask.graphics.beginFill(0x000000, 1);
            this.rankingListMask.graphics.drawRect(0, 0, this.context.stage.width, this.context.stage.height);
            this.rankingListMask.graphics.endFill();
            this.rankingListMask.alpha = 0.5;
            this.rankingListMask.touchEnabled = true;
            this.context.addChild(this.rankingListMask);

            //简单实现，打开这关闭使用一个按钮。
            this.context.addChild(this.btnClose);
            //主要示例代码开始
            this.bitmap = platform.openDataContext.createDisplayObject(null, this.context.stage.stageWidth, this.context.stage.stageHeight);
            this.context.addChild(this.bitmap);
			platform.openDataContext.postMessage({
                command: "loadRes"
            });
            //主域向子域发送自定义消息
            platform.openDataContext.postMessage({
                isDisplay: this.isdisplay,
                text: 'hello',
                year: (new Date()).getFullYear(),
                command: "open"
            });
            //主要示例代码结束            
            this.isdisplay = true;
        }
 
    }

	private showNotice(exmlName:string,btnName:string){
		this.panelNotice = new eui.Panel();
		this.panelNotice.skinName = exmlName;
        this.panelNotice.title = "Title";
        this.panelNotice.horizontalCenter = 0;
        this.panelNotice.verticalCenter = 0;
        this.context.addChild(this.panelNotice);

		CommonButtonHandle.beginTouch(this.panelNotice.getChildByName("btn_close"),this);
		this.panelNotice.getChildByName("btn_close").addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
		
		this.handlePanel(this.panelNotice,btnName);
	}

	private showEditUI(btnName:string){
		this.panelSub = new eui.Panel();
		this.panelSub.skinName = "resource/eui_skins/UserUI/EditUI.exml";
        this.panelSub.title = "Title";
        this.panelSub.horizontalCenter = 0;
        this.panelSub.verticalCenter = 0;
        this.context.addChild(this.panelSub);

		CommonButtonHandle.beginTouch(this.panelSub.getChildByName("btn_close_edit"),this);
		this.panelSub.getChildByName("btn_close_edit").addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);

		CommonButtonHandle.beginTouch(this.panelSub.getChildByName("btn_confirm_modify"),this);
		this.panelSub.getChildByName("btn_confirm_modify").addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);

		this.panelSub.getChildByName("lb_edit_title").text = ConstValue.P_MODIFY_TITLE;
		this.sCurModifyBtn = btnName;
		if (btnName == "modify_nichen_btn"){
			this.panelSub.getChildByName("lb_desc").text = ConstValue.P_MODIFY_NICHENG;
		}else if (btnName == "modify_pwd_btn"){

			this.panelSub.getChildByName("lb_old_pwd").text = ConstValue.P_MODIFY_OLD_PWD;
			this.panelSub.getChildByName("lb_desc").text = ConstValue.P_MODIFY_NEW_PWD;
			this.panelSub.getChildByName("lb_new_pwd").text = ConstValue.P_MODIFY_NEW_PWD;

			this.panelSub.getChildByName("lb_old_pwd").visible = true;
			this.panelSub.getChildByName("bg_old").visible = true;
			this.panelSub.getChildByName("account_lb_old").visible = true;
			this.panelSub.getChildByName("account_lb_old").displayAsPassword = true;

			this.panelSub.getChildByName("account_lb_txt").displayAsPassword = true;

			this.panelSub.getChildByName("lb_new_pwd").visible = true;
			this.panelSub.getChildByName("bg_new").visible = true;
			this.panelSub.getChildByName("account_lb_new").visible = true;
			this.panelSub.getChildByName("account_lb_new").displayAsPassword = true;

		}else if (btnName == "modify_realname_btn"){
			this.panelSub.getChildByName("lb_desc").text = ConstValue.P_MODIFY_REALNAME;
		}else if (btnName == "modify_wx_btn"){
			this.panelSub.getChildByName("lb_desc").text = ConstValue.P_MODIFY_WX;
		}else if (btnName == "modify_beget_btn"){
			this.panelSub.getChildByName("lb_desc").text = ConstValue.P_MODIFY_BEGET;
		}else if (btnName == "btn_gm"){
			this.panelSub.getChildByName("lb_edit_title").text = "gm";
			this.panelSub.getChildByName("lb_desc").text = "输入命令：";
		}else if (btnName == "hall_question_btn"){
			this.panelSub.getChildByName("lb_edit_title").text = "反馈";
			this.panelSub.getChildByName("lb_desc").text = "问题描述：";
		}

	}

	private showChoiceUI(){
		if(this.choicePanel == null){
			this.choicePanel = new eui.Panel();
			this.choicePanel.skinName = "resource/eui_skins/UserUI/OptionUI.exml";
			this.choicePanel.title = "Title";
			this.context.addChild(this.choicePanel);

			let x = this.panel.getChildByName("btn_choice").x ;
			let y = this.panel.getChildByName("btn_choice").y ;
			this.choicePanel.x = x - 50;
			this.choicePanel.y = y + 50;
		}else{
			this.context.removeChild(this.choicePanel);
			this.choicePanel = null;
		}
	}

	private handleRank(group,parG){
		for(let i in this.lRank){
			let arr = this.lRank[i];
			let ii = parseInt(i);
			CommonTools.log("lRank-------i:"+i)
			let panelT = new eui.Panel();
			panelT.skinName = "resource/eui_skins/UserUI/RankGroup.exml";
			panelT.name = "p_"+i;
			panelT.y = ii*72;
			group.addChild(panelT);
			let groupT = panelT.getChildByName("group_1") as eui.Group;
			let rank = groupT.getChildByName("rank") as eui.Label;
			rank.text = (ii+1)+"";
			let name = groupT.getChildByName("name") as eui.Label;
			name.name = arr[1];
			let desc = groupT.getChildByName("desc") as eui.Label;
			desc.text = "胜场 ： "+arr[3]+"   胜率："+arr[4]+"%";
		}

		let rankG = parG.getChildByName("myrankG") as eui.Group;
		let rank = rankG.getChildByName("myrank") as eui.Label;
		rank.text = this.sMyRankDesc;
		let name = rankG.getChildByName("name") as eui.Label;
		name.text = this.lMyRank[1];
		let desc = rankG.getChildByName("desc") as eui.Label;
		desc.text = "胜场 ： "+this.lMyRank[3]+"   胜率："+this.lMyRank[4]+"%";
	}

	private handlePanel(panelCtx:eui.Panel,btnName:string){
		switch(btnName){

			case "btn_rank":
				let parent = panelCtx.getChildByName("fighting_parent") as eui.Group;
				let scroll = parent.getChildByName("scroll") as eui.Scroller;
				let group = scroll.getChildByName("scroll_group")as eui.Group;
				group.removeChildren();

				parent.getChildByName("all_rank_lb").addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
				CommonButtonHandle.beginTouch(parent.getChildByName("all_rank_lb"),this);

				parent.getChildByName("friend_rank_lb").addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
				CommonButtonHandle.beginTouch(parent.getChildByName("friend_rank_lb"),this);

				parent.getChildByName("match_rank_lb").addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
				CommonButtonHandle.beginTouch(parent.getChildByName("match_rank_lb"),this);

				parent.getChildByName("lv_rank_lb").addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
				CommonButtonHandle.beginTouch(parent.getChildByName("lv_rank_lb"),this);

				this.handleRank(group,parent);
				break;

			case "all_rank_lb":
				let parent_all = panelCtx.getChildByName("fighting_parent") as eui.Group;
				let scroll_all = parent_all.getChildByName("scroll") as eui.Scroller;
				let group_all = scroll_all.getChildByName("scroll_group")as eui.Group;
				group_all.removeChildren();

				parent_all.getChildByName("all_rank_bg").visible = true;
				parent_all.getChildByName("friend_rank_bg").visible = false;

				this.handleRank(group_all,parent_all);
				break;

			case "friend_rank_lb":
				let parent_friend = panelCtx.getChildByName("fighting_parent") as eui.Group;
				let scroll_friend = parent_friend.getChildByName("scroll") as eui.Scroller;
				let group_friend = scroll_friend.getChildByName("scroll_group")as eui.Group;
				group_friend.removeChildren();

				parent_friend.getChildByName("all_rank_bg").visible = false;
				parent_friend.getChildByName("friend_rank_bg").visible = true;
				break;
			
			case "match_rank_lb":
			case "getTotalPvpRank":
				let parent_match = panelCtx.getChildByName("fighting_parent") as eui.Group;
				let scroll_match = parent_match.getChildByName("scroll") as eui.Scroller;
				let group_match = scroll_match.getChildByName("scroll_group")as eui.Group;
				group_match.removeChildren();

				let img = parent_match.getChildByName("match_rank_bg") as eui.Image;
				img.source = RES.getRes("rank_select_02_png");

				let img2 = parent_match.getChildByName("lv_rank_bg") as eui.Image;
				img2.source = RES.getRes("rank_select_01_png");

				this.handleRank(group_match,parent_match);
				break;

			case "lv_rank_lb":
			case "getTotalLvRank":
				let parent_lv = panelCtx.getChildByName("fighting_parent") as eui.Group;
				let scroll_lv = parent_lv.getChildByName("scroll") as eui.Scroller;
				let group_lv = scroll_lv.getChildByName("scroll_group")as eui.Group;
				group_lv.removeChildren();

				let img_lv = parent_lv.getChildByName("match_rank_bg") as eui.Image;
				img_lv.source = RES.getRes("rank_select_01_png");

				let img2_lv = parent_lv.getChildByName("lv_rank_bg") as eui.Image;
				img2_lv.source = RES.getRes("rank_select_02_png");

				this.handleRank(group_lv,parent_lv);
				break;

			case "btn_noticetip":
				let clearGroup = panelCtx.getChildByName("group_clear") as eui.Group;
				clearGroup.getChildByName("lb_clear_click").addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
				CommonButtonHandle.beginTouch(clearGroup.getChildByName("lb_clear_click"),this);
				if (ConstValue.P_IS_DEBUG || 1<2){
					let iCount = 10;
					let iOffY = 72;
					let scroll = this.panelNotice.getChildByName("left_scroller");
					let group = scroll.getChildByName("left_group");
					let lb_title = this.panelNotice.getChildByName("lb_title") as eui.Label;
					lb_title.text = "标题：";
					let lb_mail_info = this.panelNotice.getChildByName("lb_mail_info") as eui.Label;
					lb_mail_info.text = "";

					for(let i=0;i<iCount;i++){
						let panelT = new eui.Panel();
						panelT.skinName = "resource/eui_skins/UserUI/NoticeGroup.exml";
						panelT.name = "p_"+i;
						panelT.y = i*72;
						group.addChild(panelT);
						let groupT = panelT.getChildByName("group_1") as eui.Group;
						groupT.getChildByName("img_yellow").visible = false;
						let labelTitle = groupT.getChildByName("lb_title") as eui.Label;
						labelTitle.text = "喜报！！"+(i+1);
						let labelClick = groupT.getChildByName("lb_notice_click") as eui.Label;
						labelClick.name = "lb_notice_click" + i;
						labelClick.addEventListener(egret.TouchEvent.TOUCH_TAP, this.onClick, this);
						CommonButtonHandle.beginTouch(labelClick,this);
					}
				}else{
					let sData = CommonTools.getDataJsonStr("getAllMail",1,{roleId:ConstValue.cacheUserInfo.id});
					ConstValue.P_NET_OBJ.sendData(sData);
				}
				break;

			default:
				CommonTools.log("22222222 default");
				break;
		}
	}

	/**
	 * 回包处理
	 */
	public async handlePacket(jsonObj:any){
		if (jsonObj.f == "setName"){
			if(jsonObj.m != "" || jsonObj.s != 1){
				CommonTools.addCommonTips(this.context,ConstValue.P_MODIFY_FAIL);
			}else{
				CommonTools.addCommonTips(this.context,ConstValue.P_SEND_MODIFY_SUCCESS);
				this.panelNotice.getChildByName("nickName_lb").text = jsonObj.d.name;
				ConstValue.cacheUserInfo.name = jsonObj.d.name;
				this.closeSub();
			}
		}else if (jsonObj.f == "gmFunc"){
			if(jsonObj.m != "" || jsonObj.s != 1){
				CommonTools.addCommonTips(this.context,"执行失败");
			}else{
				CommonTools.addCommonTips(this.context,"执行成功");
			}
		}else if (jsonObj.f == "WaitingInfo"){
			if(jsonObj.m != "" || jsonObj.s != 1){
				CommonTools.addCommonTips(this.context,ConstValue.P_ENTER_ROOM_FAIL);
			}else{
				if(ConstValue.P_FIGHT_OBJ == null){
					ConstValue.P_FIGHT_OBJ = new FightingModule(this.context);
				}
				if(jsonObj.d.state < 2){//等待人
					CommonTools.log("1111111111111111111111111111");
					ConstValue.P_FIGHT_OBJ.showVspanel();
				}else if(jsonObj.d.state == 2){//开始比赛
					CommonTools.log("2222222222222222222222222222");
					ConstValue.P_FIGHT_OBJ.releaseVsPanel();
				}
			}
		}else if (jsonObj.f == "syncMapData"){
			if(jsonObj.m != "" || jsonObj.s != 1){
				
			}else{
				if(ConstValue.P_FIGHT_OBJ == null){
					ConstValue.P_FIGHT_OBJ = new FightingModule(this.context);
				}
				ConstValue.P_FIGHT_OBJ.initMapData(jsonObj.d);
			}
		}else if (jsonObj.f == "openRnakUI" || jsonObj.f == "getTotalPvpRank" || jsonObj.f == "getTotalLvRank"){
			if(jsonObj.m != "" || jsonObj.s != 1){
				
			}else{
				this.lRank = jsonObj.d.lRank;
				this.lMyRank = jsonObj.d.myRank;
				this.sMyRankDesc = jsonObj.d.myRankDesc;
				if(jsonObj.f == "openRnakUI"){
					this.showNotice("resource/eui_skins/UserUI/NewRankUI.exml","btn_rank");
				}else{
					this.handlePanel(this.panelNotice,jsonObj.f);
				}
				CommonTools.log("this.lRank-------------"+this.lRank)
			}
		}
	}

	private closeNotice(){
		if (this.panelNotice != null)this.context.removeChild(this.panelNotice);
		this.panelNotice = null;
	}

	private closeSub(){
		if (this.panelSub != null)this.context.removeChild(this.panelSub);
		this.panelSub = null;
	}

	private clear(){
		this.closeSub();
		this.closeNotice();
		this.context.removeChild(this.panel);
		ConstValue.P_HALL_OBJ = null;
	}
}